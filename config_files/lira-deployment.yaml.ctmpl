apiVersion: apps/v1
kind: Deployment
metadata:
    name: lira
    labels:
        app.kubernetes.io/managed-by: mint
        app.kubernetes.io/name: lira
spec:
    replicas: 1
    revisionHistoryLimit: 1
    selector:
        matchLabels:
          component: lira
    strategy:
        type: RollingUpdate
        rollingUpdate:
            maxSurge: 3
            maxUnavailable: 1
    template:
        metadata:
            labels:
                app: lira
                component: lira
        spec:
            containers:
            - name: lira
              image: {{env "LIRA_DOCKER_IMAGE"}}
              imagePullPolicy: Always
              ports:
                  - name: http
                    containerPort: 8080
                    protocol: TCP
              volumeMounts:
                  - name: lira-config
                    mountPath: /etc/secondary-analysis
                    readOnly: true
              env:
                  - name: lira_config
                    value: /etc/secondary-analysis/config.json
                  {{ if (env "USE_CAAS") | parseBool }}
                  - name: caas_key
                    value: /etc/secondary-analysis/caas_key.json
                  {{ end }}
              readinessProbe:
                  httpGet:
                      path: /health
                      port: 8080
                      scheme: HTTP
                  initialDelaySeconds: 1
                  timeoutSeconds: 5
                  successThreshold: 1
                  failureThreshold: 10
              resources:
                  requests:
                      cpu: "0.20"
                      memory: "1G"
            nodeSelector:
                state: active
            terminationGracePeriodSeconds: 0
            volumes:
                - name: lira-config
                  secret:
                      secretName: {{env "LIRA_CONFIG_SECRET_NAME"}}
                      items:
                          - key: config
                            path: config.json
                          {{ if (env "USE_CAAS") | parseBool }}
                          - key: caas_key
                            path: caas_key.json
                          {{ end }}
