#!/usr/bin/env bash

# Source the environment specific variables
source "${CONFIG_DIR}/environment.${ENVIRONMENT}"

# Dynamic Variables
export GENERATE_CERTS="false"

export PIPELINE_TOOLS_VERSION="v0.46.0"

export LIRA_VERSION="v0.17.0"

export FALCON_VERSION="v0.1.4"

export SS2_VERSION="smartseq2_v2.2.0"

export TENX_VERSION="cellranger_v1.0.2"

export COLLECTION_NAME="lira-${ENVIRONMENT}"

export CAAS_KEY_PATH="secret/dsde/mint/${ENVIRONMENT}/${LIRA_APPLICATION_NAME}/${CAAS_KEY_FILE}"


# Cromwell Variables
export USE_CAAS=true
export MAX_CROMWELL_RETRIES=1
export CAAS_ENVIRONMENT="caas-prod"
export CROMWELL_URL="https://cromwell.${CAAS_ENVIRONMENT}.broadinstitute.org/api/workflows/v1"
export MAX_CROMWELL_RETRIES=1
export CAAS_KEY_FILE="${CAAS_ENVIRONMENT}-key.json"


# Kuberenetes Variables
export KUBERNETES_CLUSTER="green-100-us-central1"
export KUBERNETES_NAMESPACE="green-100-us-central1-ns"
export KUBERNETES_ZONE="us-central1-a"


# Lira Variables
export LIRA_NUMBER_OF_REPLICAS="3"
export LIRA_APPLICATION_NAME="lira"
export LIRA_DEPLOYMENT_NAME="lira"
export LIRA_CONTAINER_NAME="lira"
export LIRA_SERVICE_NAME="lira-service"
export LIRA_GLOBAL_IP_NAME="lira"
export LIRA_INGRESS_NAME="lira-ingress"
export LIRA_CONFIG_FILE="lira-config.json"
export LIRA_CONFIG_SECRET_NAME="lira-config-$(date '+%Y-%m-%d-%H-%M-%S')"
export LIRA_DEPLOYMENT_YAML="lira-deployment.yaml"
export LIRA_DOCKER_IMAGE="quay.io/humancellatlas/secondary-analysis-lira:${LIRA_VERSION}"
export GCS_ROOT="gs://${GCLOUD_PROJECT}-cromwell-execution/caas-cromwell-executions"

export USE_HMAC=true
export SUBMIT_WDL_DIR=""
export SUBMIT_AND_HOLD=true


# Falcon Variables
export FALCON_NUMBER_OF_REPLICAS="1"
export FALCON_APPLICATION_NAME="falcon"
export FALCON_DEPLOYMENT_NAME="falcon"
export FALCON_CONTAINER_NAME="falcon"
export FALCON_CONFIG_FILE="falcon-config.json"
export FALCON_CONFIG_SECRET_NAME="falcon-config-$(date '+%Y-%m-%d-%H-%M-%S')"
export FALCON_DEPLOYMENT_YAML="falcon-deployment.yaml"
export FALCON_DOCKER_IMAGE="quay.io/humancellatlas/secondary-analysis-falcon:${FALCON_VERSION}"
export FALCON_QUEUE_UPDATE_INTERVAL="60"
export FALCON_WORKFLOW_START_INTERVAL="3"


# Pipeline tools
export PIPELINE_TOOLS_PREFIX="https://raw.githubusercontent.com/HumanCellAtlas/pipeline-tools/${PIPELINE_TOOLS_VERSION}"

if [ -n "${SUBMIT_WDL_DIR}" ];
then
    export SUBMIT_WDL="${PIPELINE_TOOLS_PREFIX}/adapter_pipelines/${SUBMIT_WDL_DIR}/submit.wdl"
else
    export SUBMIT_WDL="${PIPELINE_TOOLS_PREFIX}/adapter_pipelines/submit.wdl"
fi


# TLS Cert variables
export TLS_FULL_CHAIN_DIR="lira-ssl-certificate.crt"
export TLS_PRIVATE_KEY_DIR="lira-ssl-certificate.key"
export TLS_SECRET_NAME="hca-tls-secret"-$(date '+%Y-%m-%d-%H-%M-%S')


# Smart Seq 2 Variables
export SS2_PREFIX="https://raw.githubusercontent.com/HumanCellAtlas/skylab/${SS2_VERSION}"
export SS2_ANALYSIS_WDLS="[
                \"${SS2_PREFIX}/pipelines/smartseq2_single_sample/SmartSeq2SingleSample.wdl\",
                \"${SS2_PREFIX}/library/tasks/HISAT2.wdl\",
                \"${SS2_PREFIX}/library/tasks/Picard.wdl\",
                \"${SS2_PREFIX}/library/tasks/RSEM.wdl\",
                \"${SS2_PREFIX}/library/tasks/GroupMetricsOutputs.wdl\",
                \"${SS2_PREFIX}/library/tasks/ZarrUtils.wdl\"
            ]"
export SS2_OPTIONS_LINK="${PIPELINE_TOOLS_PREFIX}/adapter_pipelines/ss2_single_sample/options.json"
export SS2_WDL_STATIC_INPUTS_LINK="${PIPELINE_TOOLS_PREFIX}/adapter_pipelines/ss2_single_sample/adapter_example_static.json"
export SS2_WDL_LINK="${PIPELINE_TOOLS_PREFIX}/adapter_pipelines/ss2_single_sample/adapter.wdl"
export SS2_WORKFLOW_NAME="AdapterSmartSeq2SingleCell"


# TenX Variables
export TENX_PREFIX="https://raw.githubusercontent.com/HumanCellAtlas/skylab/${TENX_VERSION}"
export TENX_ANALYSIS_WDLS="[
                \"${TENX_PREFIX}/pipelines/cellranger/cellranger.wdl\"
            ]"
export TENX_OPTIONS_LINK="${PIPELINE_TOOLS_PREFIX}/adapter_pipelines/cellranger/options.json"
export TENX_WDL_STATIC_INPUTS_LINK="${PIPELINE_TOOLS_PREFIX}/adapter_pipelines/cellranger/adapter_example_static.json"
export TENX_WDL_LINK="${PIPELINE_TOOLS_PREFIX}/adapter_pipelines/cellranger/adapter.wdl"
export TENX_WORKFLOW_NAME="Adapter10xCount"
